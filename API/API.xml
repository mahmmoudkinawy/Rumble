<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.Controllers.AccountController">
            <summary>
            Account Controller for Authentication the users
            </summary>
        </member>
        <member name="M:API.Controllers.AccountController.Register(API.DTOs.RegisterDto)">
            <summary>
            Register endpoint for registering a new user with new email
            </summary>
            <param name="registerDto"></param>
            <returns>Returns User Dto that returns token and username</returns>
        </member>
        <member name="M:API.Controllers.AccountController.Login(API.DTOs.LoginDto)">
            <summary>
            Login endpoint for log the user in with username and password
            </summary>
            <param name="registerDto"></param>
            <returns>Returns User Dto that returns token and username</returns>
        </member>
        <member name="T:API.Controllers.BugsController">
            <summary>
            That Controller is not a part of Producation! 
            That's just for testing purposes
            </summary>
        </member>
        <member name="M:API.Controllers.BugsController.GetSecret">
            <summary>
            Try's to access authorized information
            </summary>
            <returns>will always return 401</returns>
        </member>
        <member name="M:API.Controllers.BugsController.GetNotFound">
            <summary>
            Try's get not found entity
            </summary>
            <returns>will always return 404</returns>
        </member>
        <member name="M:API.Controllers.BugsController.GetBadRequest">
            <summary>
            Get a Bad Request
            </summary>
            <returns>will always return 400</returns>
        </member>
        <member name="M:API.Controllers.BugsController.GetServerError">
            <summary>
            Will get server error
            </summary>
            <returns>will always return 500</returns>
        </member>
        <member name="T:API.Controllers.LikesController">
            <summary>
            Likes Controller for dealing with likes!!
            </summary>
        </member>
        <member name="M:API.Controllers.LikesController.AddLike(System.String)">
            <summary>
            This is end point add a like to a particular user using username!
            </summary>
            <param name="username"></param>
            <returns>Nothing</returns>
        </member>
        <member name="M:API.Controllers.LikesController.GetUserLikes(System.String)">
            <summary>
            Returns all likes based on the logged in user!
            </summary>
            <param name="predicate">liked or likedBy</param>
            <returns></returns>
        </member>
        <member name="T:API.Controllers.UsersController">
            <summary>
            Users Controller for getting users details
            </summary>
        </member>
        <member name="M:API.Controllers.UsersController.GetUsers(API.Helpers.UserParams)">
            <summary>
            Returns all the users in the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Returns a particular user with the given id
            </summary>
            <param name="id">Id must be passed as a Route in the API</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UsersController.UpdateUser(API.DTOs.MemberUpdateDto)">
            <summary>
            Update some attributes for the user
            </summary>
            <param name="memberUpdateDto"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UsersController.UploadImage(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Add an Profile Image! and if there none a profile images at all!
            The first image gonna be a Main Image
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UsersController.SetMainPhoto(System.Int32)">
            <summary>
            Set another image as the main one! instead of the main image!
            </summary>
            <param name="photoId">Photo Id to be set main photo</param>
            <returns>Returns an object</returns>
        </member>
        <member name="M:API.Controllers.UsersController.DeletePhoto(System.Int32)">
            <summary>
            Delete an image from the images collection, and if it was the main one! 
            It won't be deleted
            </summary>
            <param name="photoId">Photo Id to be deleted</param>
            <returns>Returns an object</returns>
        </member>
        <member name="T:API.DTOs.LikeDto">
            <summary>
            Like Dto to be returned to the consumer!
            </summary>
        </member>
        <member name="T:API.DTOs.LoginDto">
            <summary>
            Model that used by account controller for login users
            </summary>
        </member>
        <member name="P:API.DTOs.LoginDto.Username">
            <summary>
            Put Username and it's Required
            </summary>
        </member>
        <member name="P:API.DTOs.LoginDto.Password">
            <summary>
            Put Password and it's Required
            </summary>
        </member>
        <member name="T:API.DTOs.MemberDto">
            <summary>
            The user entity returns as the following data
            </summary>
        </member>
        <member name="P:API.DTOs.MemberDto.Photos">
            <summary>
            Returns the collection related to this user
            </summary>
        </member>
        <member name="T:API.DTOs.PhotoDto">
            <summary>
            Photo DTO with specific attributes
            </summary>
        </member>
        <member name="P:API.DTOs.PhotoDto.Url">
            <summary>
            URL of the hosted image for this user
            </summary>
        </member>
        <member name="P:API.DTOs.PhotoDto.IsMain">
            <summary>
            Indicator that return if that's the main profile Photo or not
            </summary>
        </member>
        <member name="T:API.DTOs.RegisterDto">
            <summary>
            Model that used by account controller for register users
            </summary>
        </member>
        <member name="P:API.DTOs.RegisterDto.Username">
            <summary>
            Put Username and it's Required
            </summary>
        </member>
        <member name="P:API.DTOs.RegisterDto.Password">
            <summary>
            Put Password that's Required and
            Password Max Length is 8 and Minimum is 4, will be changed in the future 
            </summary>
        </member>
        <member name="P:API.DTOs.RegisterDto.KnownAs">
            <summary>
            KnownAs And it's required
            </summary>
        </member>
        <member name="P:API.DTOs.RegisterDto.Gender">
            <summary>
            Gender And it's required
            </summary>
        </member>
        <member name="P:API.DTOs.RegisterDto.DateOfBirth">
            <summary>
            Date of birth for user
            </summary>
        </member>
        <member name="P:API.DTOs.RegisterDto.City">
            <summary>
            City for the user
            </summary>
        </member>
        <member name="P:API.DTOs.RegisterDto.Country">
            <summary>
            Country for the user
            </summary>
        </member>
        <member name="T:API.DTOs.UserDto">
            <summary>
            UserDto is the model the returns from the two end points => register and login for authenticating the users
            </summary>
        </member>
        <member name="P:API.DTOs.UserDto.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:API.DTOs.UserDto.Username">
            <summary>
            Username as a string
            </summary>
        </member>
        <member name="P:API.DTOs.UserDto.PhotoUrl">
            <summary>
            Image Url as a link
            </summary>
        </member>
        <member name="P:API.DTOs.UserDto.KnownAs">
            <summary>
            Knows as to be displayed in the nav bar
            </summary>
        </member>
        <member name="P:API.DTOs.UserDto.Gender">
            <summary>
            Gender of the activited user
            </summary>
        </member>
    </members>
</doc>
